//
//  DishImporter.swift
//  Random4Dinner
//
//  Created by Oleg Podrez on 30.03.25.
//

import Foundation
import SwiftData
import SwiftUI
import FirebaseAuth


// –ò–º–ø–æ—Ä—Ç –æ–¥–Ω–æ–≥–æ –±–ª—é–¥–∞ (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ private)
func importDish(from decod: DishDECOD, context: ModelContext) {
    let dish = Dish(
        name: decod.name ?? "",
        about: decod.about ?? "",
        imageBase64: decod.imageBase64 ?? "",
        category: decod.category,
        userId: decod.userId,
        groupId: decod.groupId
    )
    context.insert(dish)
}

// –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –±–ª—é–¥ –∏–∑ JSON
func importDishesFromJSON(context: ModelContext) {
    guard let url = Bundle.main.url(forResource: "dishes", withExtension: "json") else {
        print("–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª dishes.json –≤ –±–∞–Ω–¥–ª–µ!")
        return
    }
    do {
        let data = try Data(contentsOf: url)
        let decoder = JSONDecoder()
        let container = try decoder.decode(DishDECOD.DishesContainer.self, from: data)
        print("–ó–∞–≥—Ä—É–∂–µ–Ω–æ –±–ª—é–¥: \(container.dishes.count)")
        let userId = Auth.auth().currentUser?.uid // üëà –ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for var dish in container.dishes {
            // –ó–∞–¥–∞—ë–º userId, —á—Ç–æ–±—ã –±–ª—é–¥–æ —Å—Ç–∞–ª–æ "–ª–∏—á–Ω—ã–º"
            var dishWithUser = dish
            dishWithUser.userId = userId
            dishWithUser.groupId = nil
            importDish(from: dishWithUser, context: context)
        }
        try? context.save()
    } catch {
        print("–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–ª—é–¥: \(error)")
    }
}

